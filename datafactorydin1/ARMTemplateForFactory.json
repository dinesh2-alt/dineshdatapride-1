{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorydin1"
		},
		"lk_datasource2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lk_datasource2'"
		},
		"lk_servicesblob1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lk_servicesblob1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcecopyingfromblob": {},
									"sink1us": {},
									"sink1uk": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lk_servicesblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test container1",
						"container": "containerdin1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "location_id",
						"type": "String"
					},
					{
						"name": "address_1",
						"type": "String"
					},
					{
						"name": "address_2",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state_province",
						"type": "String"
					},
					{
						"name": "postal_code",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_servicesblob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_uk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lk_datasource2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "uk",
						"container": "sinkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_datasource2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_us')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lk_datasource2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "us",
						"container": "sinkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_datasource2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lk_servicesblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test container1",
						"container": "containerdin1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "location_id",
						"type": "String"
					},
					{
						"name": "address_1",
						"type": "String"
					},
					{
						"name": "address_2",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state_province",
						"type": "String"
					},
					{
						"name": "postal_code",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_servicesblob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_datasource2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lk_datasource2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_servicesblob1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lk_servicesblob1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_src_blob",
								"type": "DatasetReference"
							},
							"name": "sourcecopyingfromblob"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sink_us",
								"type": "DatasetReference"
							},
							"name": "sink1us"
						},
						{
							"dataset": {
								"referenceName": "ds_sink_uk",
								"type": "DatasetReference"
							},
							"name": "sink1uk"
						}
					],
					"transformations": [
						{
							"name": "split1us"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          location_id as string,",
						"          address_1 as string,",
						"          address_2 as string,",
						"          city as string,",
						"          state_province as string,",
						"          postal_code as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourcecopyingfromblob",
						"sourcecopyingfromblob split(equals(country, \"us\"),",
						"     disjoint: false) ~> split1us@(us, uk)",
						"split1us@us sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1us",
						"split1us@uk sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1uk"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_src_blob')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_us')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_uk')]"
			]
		}
	]
}